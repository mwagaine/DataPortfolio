-- EXPLORATORY DATA ANALYSIS

-- Open up pgAdmin on your desktop and connect to your PostgreSQL database containing the data extracted previously. 

-- View the full dataset
SELECT * 
FROM mwag_pyspark.songsales;


-- Find the biggest sales week for a Number 1 song in 1999
SELECT *
FROM mwag_pyspark.songsales
ORDER BY "Sales" DESC
LIMIT 1;


-- Find the smallest sales week for a Number 1 song in 1999
SELECT *
FROM mwag_pyspark.songsales
ORDER BY "Sales" ASC
LIMIT 1;


-- Find the average sales for a Number 1 song in 1999
SELECT FLOOR(AVG("Sales")) AS Average_Sales
FROM mwag_pyspark.songsales;


-- Find the chart-topping songs that were released by artists whose names consist of one word only
SELECT DISTINCT "Song",
                "Artists"
FROM mwag_pyspark.songsales
WHERE "Artists" NOT LIKE '% %';


-- Find the average sales per month for a Number 1 song in 1999
SELECT (CASE 
            WHEN EXTRACT(MONTH FROM "ChartDate_WeekEnding") = 01 THEN 'January'
            WHEN EXTRACT(MONTH FROM "ChartDate_WeekEnding") = 02 THEN 'February'
            WHEN EXTRACT(MONTH FROM "ChartDate_WeekEnding") = 03 THEN 'March'
            WHEN EXTRACT(MONTH FROM "ChartDate_WeekEnding") = 04 THEN 'April'
            WHEN EXTRACT(MONTH FROM "ChartDate_WeekEnding") = 05 THEN 'May'
            WHEN EXTRACT(MONTH FROM "ChartDate_WeekEnding") = 06 THEN 'June'
            WHEN EXTRACT(MONTH FROM "ChartDate_WeekEnding") = 07 THEN 'July'
            WHEN EXTRACT(MONTH FROM "ChartDate_WeekEnding") = 08 THEN 'August'
            WHEN EXTRACT(MONTH FROM "ChartDate_WeekEnding") = 09 THEN 'September'
            WHEN EXTRACT(MONTH FROM "ChartDate_WeekEnding") = 10 THEN 'October'
            WHEN EXTRACT(MONTH FROM "ChartDate_WeekEnding") = 11 THEN 'November'
            ELSE 'December'
        END) AS Month,
        FLOOR(AVG("Sales")) AS Average_Sales
FROM mwag_pyspark.songsales
GROUP BY Month
ORDER BY Average_Sales DESC;  


-- Find the average sales per quarter for a Number 1 song in 1999
SELECT (CASE 
            WHEN MONTH("ChartDate_WeekEnding") IN (01, 02, 03) THEN 'Q1'
            WHEN MONTH("ChartDate_WeekEnding") IN (04, 05, 06) THEN 'Q2'
            WHEN MONTH("ChartDate_WeekEnding") IN (07, 08, 09) THEN 'Q3'
            ELSE 'Q4'
        END) AS Quarter,
        FLOOR(AVG("Sales")) AS Average_Sales
FROM mwag_pyspark.songsales
GROUP BY Quarter
ORDER BY Average_Sales DESC;


-- Show the chart weeks that generated more sales than average number of weekly sales for the year
SELECT *
FROM mwag_pyspark.songsales
WHERE "Sales" > (SELECT FLOOR(AVG("Sales"))
                 FROM mwag_pyspark.songsales);


-- Find the songs that spent more than 1 week at Number 1 in 1999
SELECT "Song",
       "Artists",
       COUNT(*) as Number_of_Weeks
FROM mwag_pyspark.songsales
GROUP BY "Song",
         "Artists"
HAVING Number_of_Weeks > 1
ORDER BY Number_of_Weeks DESC;


-- Find the top 10 songs that accumulated the most sales whilst at Number 1
SELECT "Song",
       "Artists",
       SUM("Sales") as Total_Sales
FROM mwag_pyspark.songsales
GROUP BY "Song",
         "Artists"
ORDER BY Total_Sales DESC
LIMIT 10;


-- Find the top 10 songs that accumulated the least sales whilst at Number 1
SELECT "Song",
       "Artists",
       SUM("Sales") as Total_Sales
FROM mwag_pyspark.songsales
GROUP BY "Song",
         "Artists"
ORDER BY Total_Sales ASC
LIMIT 10;


-- Find the top 5 artists with the most weeks at Number 1 in 1999
SELECT "Artists",
       COUNT(*) AS Number_of_Weeks
FROM mwag_pyspark.songsales
GROUP BY "Artists"
ORDER BY Number_of_Weeks DESC
LIMIT 5;


-- Find the cumulative sales generated by Number 1 songs throughout 1999, in terms of both raw sales and as a percentage of total sales
SELECT *,
       SUM("Sales") OVER (ORDER BY "ChartDate_WeekEnding") AS Cumulative_Sales,
       ROUND((SUM("Sales") OVER (ORDER BY "ChartDate_WeekEnding")) / (SELECT SUM("Sales")
								      FROM mwag_pyspark.songsales) * 100, 2) AS Percentage_Sales
FROM mwag_pyspark.songsales;


-- Find the top 5 sales weeks per quarter of 1999
WITH x (Quarter, "Song", "Artists", "Sales")
	AS (SELECT (CASE 
            		WHEN EXTRACT(MONTH FROM "ChartDate_WeekEnding") IN (01, 02, 03) THEN 'Q1'
           		WHEN EXTRACT(MONTH FROM "ChartDate_WeekEnding") IN (04, 05, 06) THEN 'Q2'
            		WHEN EXTRACT(MONTH FROM "ChartDate_WeekEnding") IN (07, 08, 09) THEN 'Q3'
            		ELSE 'Q4'
        	    END) AS Quarter,
       			    "Song",
       			    "Artists",
       			    "Sales"
            FROM mwag_pyspark.songsales),
     y (Quarter, "Song", "Artists", "Sales", Position)
	AS (SELECT *,
	   	   RANK() OVER (PARTITION BY Quarter ORDER BY "Sales" DESC) AS Position
	    FROM x)
SELECT Quarter,
       "Song",
       "Artists",
       "Sales",
       Position
FROM y
WHERE Position <= 5;
